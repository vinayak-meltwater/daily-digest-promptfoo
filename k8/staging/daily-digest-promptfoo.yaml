apiVersion: apps/v1
kind: Deployment
metadata:
  name: daily-digest-promptfoo
  namespace: sprinters-staging
spec:
  revisionHistoryLimit: 5
  replicas: 1
  selector:
    matchLabels:
      app: daily-digest-promptfoo
  template:
    metadata:
      labels:
        app: daily-digest-promptfoo
      annotations:
        harvest: "staging"
        logging.meltwater.io/system: "sprinters"
        logging.meltwater.io/service: "daily-digest-promptfoo"
        logging.meltwater.io/type: "nested_json"
        co.elastic.logs/json.overwrite_keys: "true"
        co.elastic.logs/json.add_error_key: "true"
        co.elastic.logs/json.expand_keys: "true"
    spec:
      containers:
        - name: daily-digest-promptfoo
          # DOCKER_TAG is replaced by the full image tag in the deployment script
          image: 710850486770.dkr.ecr.eu-west-1.amazonaws.com/daily-digest-promptfoo:DOCKER_TAG
          resources:
            requests:
              memory: "1024Mi"
              cpu: "0.1"
            limits:
              memory: "1024Mi"
              cpu: "0.3"
          env:
            - name: NODE_ENV
              value: "production"
            - name: ENVIRONMENT
              value: "staging"
            - name: PORT
              value: "3000"
            - name: MASF_SEARCH_SERVICE_URI
              value: "https://masfsearch-staging.meltwater.net/masfsearch/v3"
            - name: DOCUMENT_MODIFICATION_SERVICE_URI
              value: "https://document-modification-service-staging.meltwater.io"
            - name: PERSONALIZATION_SERVICE_URI
              value: "https://v2.staging.personalization.meltwater.io"
            - name: NODE_IDENTITY_SERVICE_URI
              value: "https://v1.staging.identity.meltwater.io"
            - name: DASHBOARD_SERVICE_URI
              value: "https://staging.meltwater.net/analyze/api/legacyDashboardServices"
            - name: DAILY_DIGEST_SERVICE_URI
              value: "https://dashboard-services.staging.daily-digest.meltwater.io/dashboard_services/v2"
          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 15
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: daily-digest-promptfoo
spec:
  ports:
    - port: 80
      targetPort: 3000
  selector:
    app: daily-digest-promptfoo
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    external-dns.alpha.kubernetes.io/target: sprinters-staging-ingress.meltwater.io
    kubernetes.io/ingress.class: sprinters-staging
  name: daily-digest-promptfoo-ingress
  namespace: sprinters-staging
spec:
  rules:
    - host: daily-digest-promptfoo-staging.meltwater.io
      http:
        paths:
          - backend:
              serviceName: daily-digest-promptfoo
              servicePort: 80
---